name: 'publish'

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:   
jobs:
  publish-tauri:
    permissions:
      contents: write
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 确保获取完整提交历史

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'
          cache-dependency-path: 'package.json'  # 显式指定缓存依据

      - name: Generate lockfile
        if: !exists('package-lock.json')  # 如果不存在锁定文件
        run: npm install --package-lock-only  # 仅生成lock文件

      - name: Install dependencies
        run: |
          npm ci --no-audit
          npx -y @npmcli/fs@latest ensure-node-symlink  # 修复Windows符号链接问题

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: x86_64-pc-windows-msvc  # 明确指定Windows目标平台

      - name: Cache Rust
        uses: actions/cache@v4
        with:
          path: |
            src-tauri/target/release
            src-tauri/target/debug
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.platform }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.platform }}-rust-

      - name: Build Tauri
        shell: pwsh  # 强制使用PowerShell
        run: |
          $env:PATH += ";$env:CARGO_HOME\bin"
          npm run tauri build -- --verbose

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build
          path: |
            src-tauri/target/release/*.msi
            src-tauri/target/release/*.exe
